generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        String   @id @default(uuid())
  name      String
  country   String
  currency  String
  rules     WorkflowRules?
  users     User[]
  expenses  Expense[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  role       Role
  company    Company  @relation(fields: [companyId], references: [id])
  companyId  String
  manager    User?    @relation("ManagerEmployees", fields: [managerId], references: [id])
  managerId  String?
  employees  User[]   @relation("ManagerEmployees")
  approvals  Approval[]
  expenses   Expense[] @relation("EmployeeExpenses")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Expense {
  id                 String    @id @default(uuid())
  employee           User      @relation("EmployeeExpenses", fields: [employeeId], references: [id])
  employeeId         String
  company            Company   @relation(fields: [companyId], references: [id])
  companyId          String
  amount             Decimal   @db.Decimal(18,4)
  currency           String
  convertedAmount    Decimal   @db.Decimal(18,4)
  convertedCurrency  String
  category           String
  description        String
  date               DateTime
  receiptUrl         String?
  status             ExpenseStatus @default(PENDING)
  approvals          Approval[]
  approverSequence   String[]
  currentApproverIdx Int       @default(0)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model Approval {
  id        String   @id @default(uuid())
  expense   Expense  @relation(fields: [expenseId], references: [id])
  expenseId String
  approver  User     @relation(fields: [approverId], references: [id])
  approverId String
  decision  Decision @default(PENDING)
  comment   String?
  decidedAt DateTime?
}

model WorkflowRules {
  id          String  @id @default(uuid())
  company     Company @relation(fields: [companyId], references: [id])
  companyId   String  @unique
  percentage  Float?
  cfoOverride Boolean @default(true)
  hybrid      Boolean @default(true)
}

enum Role {
  ADMIN
  MANAGER
  EMPLOYEE
  FINANCE
  DIRECTOR
  CFO
}

enum ExpenseStatus {
  PENDING
  APPROVED
  REJECTED
}

enum Decision {
  PENDING
  APPROVED
  REJECTED
}
